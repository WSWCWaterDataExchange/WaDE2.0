{
	"name": "Load Normalized Data",
	"properties": {
		"activities": [
			{
				"name": "Azure Function1",
				"type": "AzureFunctionActivity",
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"typeProperties": {
					"functionName": {
						"value": "@concat('LoadWaterAllocationData?RunId=', pipeline().parameters.FolderLocation)",
						"type": "Expression"
					},
					"method": "GET"
				},
				"linkedServiceName": {
					"referenceName": "WaDE Import Functions",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Until1",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "Azure Function1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"typeProperties": {
					"expression": {
						"value": "@not(equals(activity('CheckStatus').output.Status, 0))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "CheckStatus",
							"type": "AzureFunctionActivity",
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"typeProperties": {
								"functionName": {
									"value": "@concat('GetLoadWaterOrchestrationStatus?instanceId=', activity('Azure Function1').output.instanceId)",
									"type": "Expression"
								},
								"method": "GET"
							},
							"linkedServiceName": {
								"referenceName": "WaDE Import Functions",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Is Import Running",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "CheckStatus",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"typeProperties": {
								"expression": {
									"value": "@equals(activity('CheckStatus').output.Status, 0)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Wait for Import Completion",
										"type": "Wait",
										"typeProperties": {
											"waitTimeInSeconds": 30
										}
									}
								]
							}
						}
					],
					"timeout": "7.00:00:00"
				}
			},
			{
				"name": "Send Import Complete Notification",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Until1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"typeProperties": {
					"pipeline": {
						"referenceName": "SendNotificationEmail",
						"type": "PipelineReference"
					},
					"parameters": {
						"IsSuccess": {
							"value": "@equals(activity('CheckStatus').output.Status, 1)",
							"type": "Expression"
						},
						"FolderLocation": {
							"value": "@pipeline().parameters.FolderLocation",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"FolderLocation": {
				"type": "String"
			}
		}
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}