on:
  workflow_call:
    inputs:
      azure-api-name:
        description: "The name of the API in Azure API Management"
        required: true
        type: string
      azure-api-url:
        description: "The URL of the API in Azure API Management"
        required: true
        type: string
      azure-apim-name:
        description: "The name of the Azure API Management service"
        required: true
        type: string
      azure-resource-group:
        description: "The resource group name in Azure"
        required: true
        type: string
      environment:
        required: true
        type: string
name: Deploy Application

env:
  FIREWALL_RULE_NAME: GitHubAction_${{ inputs.environment }}_${{ github.run_number }}
  FUNCTION_APP_DIR: "source/WaDEApiFunctions"

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04
    environment: ${{ inputs.environment }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
    
      - name: azure-login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: create-whitelist-ip-in-db-firewall
        id: create-whitelist-ip-in-db-firewall
        uses: azure/CLI@v1
        with:
          inlineScript: |
            set -eu
            agentIP=$(curl -s https://api.ipify.org/)
            az sql server firewall-rule create \
              --resource-group "${{ secrets.DATABASE_SERVER_RESOURCE_GROUP }}" \
              --server "${{ secrets.DATABASE_SERVER_NAME }}" \
              --name ${{ env.FIREWALL_RULE_NAME }} \
              --start-ip-address $agentIP \
              --end-ip-address $agentIP
            echo exit_code=0 >> $GITHUB_OUTPUT
      
      - name: setup-dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"
      
      - name: build-import-function-app
        run: dotnet build --configuration Release --output ../build/import
        working-directory: ./source/WaDEImportFunctions
      
      - name: build-api-function-app
        run: dotnet build --configuration Release --output ../build/api
        working-directory: ./source/WaDEApiFunctions
      
      - name: deploy-import-function-app
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ secrets.IMPORT_FUNCTION_NAME }}
          package: "source/build/import"
      
      - name: deploy-api-function-app
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ secrets.API_FUNCTION_NAME }}
          package: "source/build/api"

      - name: update-database
        run: dotnet run --configuration Release
        working-directory: ./source/WesternStatesWater.WaDE.DbUp
        env:
          ConnectionStrings__WadeDatabase: ${{ secrets.DATABASE_CONNECTION_STRING}}
      
      - name: remove-whitelist-ip-in-db-firewall
        uses: azure/CLI@v1
        if: success() || steps.create-whitelist-ip-in-db-firewall.outputs.exit_code == 0
        with:
          inlineScript: |
            set -eu
            az sql server firewall-rule delete \
              --resource-group "${{ secrets.DATABASE_SERVER_RESOURCE_GROUP }}" \
              --server "${{ secrets.DATABASE_SERVER_NAME }}" \
              --name ${{ env.FIREWALL_RULE_NAME }}
      
      - name: azure-logout
        if: always()
        run: az logout
  
  update-api-swagger:
    runs-on: ubuntu-latest
    needs: [build-and-deploy]
    defaults:
      run:
        working-directory: .github/workflows

    steps:
      - uses: actions/checkout@v2

        # Required to run func commands in the generation shell script
      - name: Install Azure Functions Core Tools
        run: sudo apt-get install -y azure-functions-core-tools-4

      # Need permissions to run the script
      - name: Update OpenAPI Script Permissions
        run: chmod 777 ./get-openapi-document.sh

      # Generate OpenAPI document via shell script
      - name: Generate OpenAPI document
        id: oai
        run: ./get-openapi-document.sh -d 60 -p ${{ env.FUNCTION_APP_DIR }} -o ".github/workflows"

      - name: Check generated OpenAPI document
        run: cat swagger.json

      - name: azure-login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true # Required for Azure Powershell to work

      - name: Deploy API to APIM
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az apim api import --path api --resource-group ${{ inputs.azure-resource-group }} \
              --service-name ${{ inputs.azure-apim-name }} --api-id ${{ inputs.azure-api-name }} --path 'api' \
              --specification-format OpenApiJson --specification-path .github/workflows/swagger.json \
              --service-url ${{ inputs.azure-api-url }} --subscription-required false

      - name: Azure cli logout
        run: |
          az logout
        if: always()