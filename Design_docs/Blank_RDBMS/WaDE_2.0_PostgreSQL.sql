-- Adel Abdallah, Senior Hydroinformatics Specialist at the WSWC, Feb 2019

--This is a Data Definition Language (DDL) script that
--generates a blank schema of the Water Data Exchange Data Model (WaDE)
-- for Microsoft SQL Server database.

-- Generated by Adel Abdallah Feb, 2019 based on WaDE XML design named WaDE2.0_schema_star generated by DbWrench V4.04 @ http://www.dbwrench.com/
-- WaDE All rights reserved. See BSD 3-Clause Licence @ https://github.com/WSWCWaterDataExchange/WaDE2.0/blob/master/LICENSE 

--Open PostgreSQL, click on Databases>> Postgers>>   at the left Object Browser panel
--Simply copy all this script and paste into the new window of "SQL query"
--Then click execute. The script should run successfully and create the 40 empty tables of WaDE"

--Adel has commented this part because it is not used in WaDE so far 
--CREATE EXTENSION if not exists postgis;
--CREATE EXTENSION if not exists postgis_topology;
--CREATE EXTENSION if not exists fuzzystrmatch;
--CREATE EXTENSION if not exists postgis_tiger_geoCoder;
-------------------------------------------------------------------------------

drop schema if exists WaDE cascade;

create schema WaDE;

/***************************************************************************/
/*********************** CREATE WADE2.0_SCHEMA_STAR ************************/
/***************************************************************************/

create table AggregatedAmounts (
	aggregatedamountid integer  NOT NULL primary key,
	organizationid integer  NOT NULL,
	reportingunitid integer  NOT NULL,
	variablespecificid integer  NOT NULL,
	watersourceid integer  NOT NULL,
	methodid integer  NOT NULL,
	amountmetadataid integer  NOT NULL,
	timeid integer  NOT NULL,
	amount double precision  NOT NULL
);
create table AllocationAmounts (
	allocationamountid integer  NOT NULL primary key,
	organizationid integer  NOT NULL,
	allocationid integer  NOT NULL,
	siteid integer  NOT NULL,
	variablespecificid integer  NOT NULL,
	watersourceid integer  NOT NULL,
	methodid integer  NOT NULL,
	amountmetadataid integer  NULL,
	timeid integer  NOT NULL,
	allocationcropdutyamount double precision  NULL,
	allocationamount double precision  NULL,
	allocationmaximum double precision  NULL
);
create table Allocations (
	allocationid integer  NOT NULL primary key,
	allocationuid varchar (50) NOT NULL,
	allocationnativeid varchar (250) NOT NULL,
	allocationowner varchar (255) NOT NULL,
	allocationapplicationdate date  NULL,
	allocationprioritydate date  NOT NULL,
	allocationlegalstatuscv varchar (50) NOT NULL,
	allocationexpirationdate date  NULL,
	allocationchangeapplicationindicator varchar (100) NULL,
	legacyallocationids varchar (100) NULL,
	allocationbasiscv varchar (250) NULL
);
create table AmountMetadata (
	amountmetadataid integer  NOT NULL primary key,
	beneficialusecategory varchar (500) NOT NULL,
	primaryusecategory varchar (250) NULL,
	usgscategorycv varchar (250) NULL,
	sdwisidentifier varchar (250) NULL,
	naicscodecv varchar (250) NULL,
	populationserved double precision  NULL,
	irrigatedacreage double precision  NULL,
	irrigationmethod varchar (100) NULL,
	croptype varchar (100) NULL,
	powergeneratedgwh double precision  NULL,
	geometry bytea  NULL,
	interbasintransferfromid varchar (255) NULL,
	interbasintransfertoid varchar (255) NULL
);
create table CVs_AggregationStatistic (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri	 varchar (255) NULL
);
create table CVs_EPSGCode (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri	 varchar (255) NULL
);
create table CVs_GNISFeatureName (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri	 varchar (255) NULL
);
create table CVs_LegalStatus (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri	 varchar (255) NULL
);
create table CVs_MethodType (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri	 varchar (255) NULL
);
create table CVs_NAICSCode (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri	 varchar (255) NULL
);
create table CVs_NHDNetworkStatus (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri	 varchar (255) NULL
);
create table CVs_NHDProduct (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri	 varchar (255) NULL
);
create table CVs_RegulatoryStatus (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri	 varchar (255) NULL
);
create table CVs_ReportingUnitType (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri	 varchar (255) NULL
);
create table CVs_ReportYearCV (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri	 varchar (255) NULL
);
create table CVs_ReportYearType (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri	 varchar (255) NULL
);
create table CVs_Units (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri	 varchar (255) NULL
);
create table CVs_USGSCategory (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri	 varchar (255) NULL
);
create table CVs_Variable (
	name varchar (250) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri	 varchar (255) NULL
);
create table CVs_VariableSpecific (
	name varchar (250) NOT NULL primary key,
	term varchar (250) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (250) NULL,
	sourcevocabularyuri varchar (255) NULL
);
create table CVs_WaterAllocationBasis (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri	 varchar (255) NULL
);
create table CVs_WaterQualityIndicator (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri	 varchar (255) NULL
);
create table CVs_WaterSourceType (
	name varchar (255) NOT NULL primary key,
	term varchar (255) NOT NULL,
	definition varchar (5000) NULL,
	category varchar (255) NULL,
	sourcevocabularyuri	 varchar (255) NULL
);
create table Methods (
	methodid integer  NOT NULL primary key,
	methoduid varchar (100) NOT NULL,
	methodname varchar (50) NOT NULL,
	methoddescription text  NOT NULL,
	methodnemilink varchar (100) NULL,
	applicableresourcetypecv varchar (100) NOT NULL,
	methodtypecv varchar (50) NOT NULL,
	datacoveragevalue varchar (100) NULL,
	dataqualityvaluecv varchar (50) NULL,
	dataconfidencevalue varchar (50) NULL
);
create table NHDMetadata (
	nhdmetadataid integer  NOT NULL primary key,
	nhdnetworkstatuscv varchar (50) NOT NULL,
	nhdproductcv varchar (50) NULL,
	nhdupdatedate date  NULL,
	nhdreachcode varchar (50) NULL,
	nhdmeasurenumber varchar (50) NULL
);
create table Organizations (
	organizationid integer  NOT NULL primary key,
	organizationuid varchar (250) NOT NULL,
	organizationname varchar (250) NOT NULL,
	organizationpurview varchar (250) NULL,
	organizationwebsite varchar (250) NOT NULL,
	organizationphonenumber varchar (250) NOT NULL,
	organizationcontactname varchar (250) NOT NULL,
	organizationcontactemail varchar (250) NOT NULL
);
create table RegulatoryOverlay (
	regulatoryoverlayid integer  NOT NULL primary key,
	regulatoryoverlayuid varchar (250) NULL,
	regulatoryoverlaynativeid varchar (250) NULL,
	regulatoryname varchar (50) NOT NULL,
	regulatorydescription text  NOT NULL,
	regulatorystatuscv varchar (50) NOT NULL,
	oversightagency varchar (250) NOT NULL,
	regulatorystatute varchar (500) NULL,
	regulatorystatutelink varchar (500) NULL,
	timeframestart date  NOT NULL,
	timeframeend date  NOT NULL,
	reportyeartypecv varchar (10) NOT NULL,
	reportyearstartmonth varchar (5) NOT NULL
);
create table RegulatoryReportingUnits (
	bridgeid integer  NOT NULL primary key,
	regulatoryoverlayid integer  NOT NULL,
	organizationid integer  NOT NULL,
	reportingunitid integer  NOT NULL,
	reportyearcv varchar (4) NULL,
	datapublicationdate date  NOT NULL
);
create table ReportingUnits (
	reportingunitid integer  NOT NULL primary key,
	reportingunituid varchar (250) NOT NULL,
	reportingunitnativeid varchar (250) NOT NULL,
	reportingunitname varchar (250) NOT NULL,
	reportingunittypecv varchar (20) NOT NULL,
	reportingunitupdatedate date  NULL,
	reportingunitproductversion varchar (100) NULL,
	statecv varchar (50) NOT NULL,
	epsgcodecv varchar (50) NULL,
	geometry bytea  NULL
);
create table Sites (
	siteid integer  NOT NULL primary key,
	siteuid varchar (55) NOT NULL,
	sitenativeid varchar (50) NULL,
	sitename varchar (500) NOT NULL,
	sitetypecv varchar (100) NULL,
	longitude varchar (50) NOT NULL,
	latitude varchar (50) NOT NULL,
	geometry bytea  NULL,
	coordinatemethodcv varchar (100) NOT NULL,
	coordinateaccuracy varchar (255) NULL,
	gniscodecv varchar (50) NULL,
	nhdmetadataid integer  NULL
);
create table SiteVariableAmounts (
	sitevariableamountid integer  NOT NULL primary key,
	organizationid integer  NOT NULL,
	allocationid integer  NULL,
	siteid integer  NOT NULL,
	variablespecificid integer  NOT NULL,
	watersourceid integer  NOT NULL,
	methodid integer  NOT NULL,
	amountmetadataid integer  NULL,
	timeid integer  NOT NULL,
	amount double precision  NOT NULL
);
create table Time_dim (
	timeid integer  NOT NULL primary key,
	reportyearcv varchar (4) NOT NULL,
	timeframestart date  NOT NULL,
	timeframeend date  NOT NULL,
	datapublicationdate date  NOT NULL
);
create table Variables (
	variablespecificid integer  NOT NULL primary key,
	variablespecificuid varchar (250) NULL,
	variablespecificcv varchar (250) NOT NULL,
	variablecv varchar (250) NOT NULL,
	aggregationstatisticcv varchar (50) NOT NULL,
	aggregationinterval  numeric (10) NOT NULL,
	aggregationintervalunitcv  varchar (50) NOT NULL,
	reportyearstartmonth  varchar (10) NOT NULL,
	reportyeartypecv  varchar (10) NOT NULL,
	amountunitcv varchar (250) NOT NULL,
	maximumamountunitcv varchar (255) NULL
);
create table WaterSources (
	watersourceid integer  NOT NULL primary key,
	watersourceuid varchar (100) NOT NULL,
	watersourcenativeid varchar (250) NULL,
	watersourcename varchar (250) NULL,
	watersourcetypecv varchar (100) NOT NULL,
	waterqualityindicatorcv varchar (100) NOT NULL,
	geometry bytea  NULL,
	gnisfeaturenamecv varchar (250) NULL
);

alter table AggregatedAmounts add constraint fk_AggregatedAmounts_AmountsMetadata
foreign key (AmountMetadataID) References AmountMetadata (AmountMetadataID)
on update no Action on delete cascade;

alter table AggregatedAmounts add constraint fk_AggregatedAmounts_Methods
foreign key (MethodID) References Methods (MethodID)
on update no Action on delete cascade;

alter table AggregatedAmounts add constraint fk_AggregatedAmounts_Organizations
foreign key (OrganizationID) References Organizations (OrganizationID)
on update no Action on delete cascade;

alter table AggregatedAmounts add constraint fk_AggregatedAmounts_ReportingUnits
foreign key (ReportingUnitID) References ReportingUnits (ReportingUnitID)
on update no Action on delete cascade;

alter table AggregatedAmounts add constraint fk_AggregatedAmounts_Time_dim
foreign key (TimeID) References Time_dim (TimeID)
on update no Action on delete cascade;

alter table AggregatedAmounts add constraint fk_AggregatedAmounts_VariablesSpecific
foreign key (VariableSpecificID) References Variables (VariableSpecificID)
on update no Action on delete cascade;

alter table AggregatedAmounts add constraint fk_AggregatedAmounts_WaterSources
foreign key (WaterSourceID) References WaterSources (WaterSourceID)
on update no Action on delete cascade;

alter table AllocationAmounts add constraint fk_AllocationAmounts_Organizations
foreign key (OrganizationID) References Organizations (OrganizationID)
on update no Action on delete cascade;

alter table AllocationAmounts add constraint fk_WaterAllocationAmounts_AmountMetadata
foreign key (AmountMetadataID) References AmountMetadata (AmountMetadataID)
on update no Action on delete cascade;

alter table AllocationAmounts add constraint fk_WaterAllocationAmounts_Methods
foreign key (MethodID) References Methods (MethodID)
on update no Action on delete cascade;

alter table AllocationAmounts add constraint fk_WaterAllocationAmounts_Sites
foreign key (SiteID) References Sites (SiteID)
on update no Action on delete cascade;

alter table AllocationAmounts add constraint fk_WaterAllocationAmounts_Time_dim
foreign key (TimeID) References Time_dim (TimeID)
on update no Action on delete cascade;

alter table AllocationAmounts add constraint fk_WaterAllocationAmounts_VariablesSpecific
foreign key (VariableSpecificID) References Variables (VariableSpecificID)
on update no Action on delete cascade;

alter table AllocationAmounts add constraint fk_WaterAllocationAmounts_WaterAllocations
foreign key (AllocationID) References Allocations (AllocationID)
on update no Action on delete cascade;

alter table AllocationAmounts add constraint fk_WaterAllocationAmounts_WaterSources
foreign key (WaterSourceID) References WaterSources (WaterSourceID)
on update no Action on delete cascade;

alter table RegulatoryReportingUnits add constraint fk_RegulatoryReportingUnits_Organizations
foreign key (OrganizationID) References Organizations (OrganizationID)
on update no Action on delete cascade;

alter table RegulatoryReportingUnits add constraint fk_RegulatoryReportingUnits_RegulatoryOverlay
foreign key (RegulatoryOverlayID) References RegulatoryOverlay (RegulatoryOverlayID)
on update no Action on delete cascade;

alter table RegulatoryReportingUnits add constraint fk_RegulatoryReportingUnits_ReportingUnits
foreign key (ReportingUnitID) References ReportingUnits (ReportingUnitID)
on update no Action on delete cascade;

alter table Sites add constraint fk_Sites_NHDMetadata
foreign key (NHDMetadataID) References NHDMetadata (NHDMetadataID)
on update no Action on delete cascade;

alter table SiteVariableAmounts add constraint fk_SiteVariableAmounts_AmountMetadata
foreign key (AmountMetadataID) References AmountMetadata (AmountMetadataID)
on update no Action on delete cascade;

alter table SiteVariableAmounts add constraint fk_SiteVariableAmounts_Methods
foreign key (MethodID) References Methods (MethodID)
on update no Action on delete cascade;

alter table SiteVariableAmounts add constraint fk_SiteVariableAmounts_Organizations
foreign key (OrganizationID) References Organizations (OrganizationID)
on update no Action on delete cascade;

alter table SiteVariableAmounts add constraint fk_SiteVariableAmounts_Sites
foreign key (SiteID) References Sites (SiteID)
on update no Action on delete cascade;

alter table SiteVariableAmounts add constraint fk_SiteVariableAmounts_Time_dim
foreign key (TimeID) References Time_dim (TimeID)
on update no Action on delete cascade;

alter table SiteVariableAmounts add constraint fk_SiteVariableAmounts_VariablesSpecific
foreign key (VariableSpecificID) References Variables (VariableSpecificID)
on update no Action on delete cascade;

alter table SiteVariableAmounts add constraint fk_SiteVariableAmounts_WaterAllocations
foreign key (AllocationID) References Allocations (AllocationID)
on update no Action on delete cascade;

alter table SiteVariableAmounts add constraint fk_SiteVariableAmounts_WaterSources
foreign key (WaterSourceID) References WaterSources (WaterSourceID)
on update no Action on delete cascade;